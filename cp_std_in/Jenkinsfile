#! /usr/bin/env groovy

pipeline {
	agent any
	parameters {
		string name: 'fileSize', trim: true
	}
	options {
		timestamps()
		timeout time: 480, unit: 'MINUTES'
	}
	stages {
		stage('Compile') {
			steps {
				script {
					appDir = 'cp_std_in'
				}
				dir(appDir) {
					script {
						sh "clang -Wall -Wextra -Werror -o app main.c"
						sh 'clang -Wall -Wextra -Werror -o file_creater file_filler.c'
					}
				}
			}
		}
		stage('Create file') {
			steps {
				dir(appDir) {
					script {
						sh "./file_creater a ${params.fileSize}"
					}
				}
			}
		}
		stage('Read file') {
			steps {
				dir(appDir) {
					script {
						int bufsize = 1
						String[] time
						String a

						sh "touch res.csv"
						while(bufsize <= 524288)
						{
							sh "#!/bin/sh +x\ncp a b"
							time = sh (script: "time -p ./app ${bufsize} < b > /dev/null", returnStderr: true).split('\n')
							a =  "${bufsize};"
							time.each { t -> 
								echo t
								String[] res = t.split(' ')
								a += res[1] + ';'
							}
							sh(script: "#!/bin/sh +x\necho $a >> res.csv")
							sh 'rm b'
							bufsize <<= 1
						}
						archiveArtifact artifact: '*.csv', fingerprint: true, allowEmptyArchive: true
					}
				}
			}
		}
	}
}
