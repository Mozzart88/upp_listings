#! /usr/bin/env groovy

pipeline {
	agent any
	parameters {
		string name: 'fileSize', trim: true
	}
	options {
		timestamps()
		timeout time: 480, unit: 'MINUTES'
	}
	stages {
		stage('Compile') {
			steps {
				script {
					appDir = 'cp_std_in'
					sh "set +x"
				}
				dir(appDir) {
					script {
						sh "clang -Wall -Wextra -Werror -o app main.c"
						sh 'clang -Wall -Wextra -Werror -o file_creater file_filler.c'
					}
				}
			}
		}
		stage('Create file') {
			steps {
				dir(appDir) {
					script {
						sh "./file_creater a ${params.fileSize}"
					}
				}
			}
		}
		stage('Read file') {
			steps {
				dir(appDir) {
					script {
						int bufsize = 1
						String time
						String a = ''

						sh "touch res.csv"
						while(bufsize <= 524288)
						{
							int i = 0
							sh '#!/bin/sh -ve\ncp a b'
							time = sh (script: "./time.sh ${bufsize} b", returnStdout: true).split('\n')[0]
							//time = a.split('\n')
							a += "${bufsize};"
							time.split(' ').each { t -> 
								if (i % 2) 	
									a += t + ';'
								++i
							}
							//sh(script: "#!/bin/sh +x\necho '$a' >> res.csv")
							a += '\n'
							sh 'rm b'
							bufsize <<= 1
						}
						writeFile(file: 'res.csv', text: a)
						archiveArtifacts artifacts: '*.csv', fingerprint: true, allowEmptyArchive: true
					}
				}
			}
		}
	}
	post {
		cleanup {
			deleteDir()
		}
	}
}
